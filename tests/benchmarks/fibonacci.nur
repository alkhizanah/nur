benchmarker = import("benchmarker.nur")

benchmarker.run("fibonacci linear function", fn () {
    fib = fn (n) {
        a = 0
        b = 1
        c = none

        if n == 0 {
            return a
        }

        i = 1

        while (i += 1) < n + 1 {
            c = a + b

            a = b
            b = c
        }

        return c
    }

    println(fib(30))
})

benchmarker.run("fibonacci recursive function (cached)", fn () {
    cache = {}

    fib = fn (n) {
        if n < 2 {
            return n
        }

        if contains(cache, n) {
            return cache[n]
        }

        result = fib(n - 1) + fib(n - 2)

        cache[n] = result

        return result
    }

    println(fib(30))
})

benchmarker.run("fibonacci recursive function (not cached)", fn () {
    fib = fn (n) {
        if n < 2 {
            return n
        }

        return fib(n - 1) + fib(n - 2)
    }

    println(fib(30))
})

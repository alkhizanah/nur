tester = import("tester.nur")

tester.run("1 level closure", fn () {
    high = fn () {
        x = 5

        low = fn () {
            return x
        }

        return low
    }

    low = high()

    return low() == 5
})

tester.run("2 levels closure", fn () {
    high = fn () {
        x = 5

        medium = fn () {
            low = fn () {
                return x
            }

            return low
        }

        return medium
    }

    medium = high()

    low = medium()

    return low() == 5
})

tester.run("while loop closure", fn () {
    closures = []

    fn () {
        i = 0

        while i < 10 {
            low = fn () {
                return i
            }

            array_push(closures, low)

            i += 1
        } 
    }()

    passed = length(closures) == 10

    foreach(closures, fn (closure) {
        if closure() != 10 {
            passed = false
        }
    })

    return passed
})

tester.run("multiple closures capture the same value", fn () {
    first = none
    second = none

    fn () {
        x = 5

        first = fn () {
            return x
        }

        second = fn () {
            x += 1

            return x
        }

        x = 10
    }()

    if second() != 11 {
        return false
    }

    return first() == 11
})

tester.end()
